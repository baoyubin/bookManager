<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bin.demo.dao.BorrowingBooksMapper" >
  <resultMap id="BaseResultMap" type="com.bin.demo.model.BorrowingBooks" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="book_id" property="bookId" jdbcType="INTEGER" />
    <result column="borrow_date" property="borrowDate" jdbcType="DATE" />
    <result column="return_data" property="returnData" jdbcType="DATE" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, book_id, borrow_date, return_data
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from borrowingbooks
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from borrowingbooks
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bin.demo.model.BorrowingBooks" >
    insert into borrowingbooks (id, user_id, book_id, 
      borrow_date, return_data)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{bookId,jdbcType=INTEGER}, 
      #{borrowDate,jdbcType=DATE}, #{returnData,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.bin.demo.model.BorrowingBooks" >
    insert into borrowingbooks
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="bookId != null" >
        book_id,
      </if>
      <if test="borrowDate != null" >
        borrow_date,
      </if>
      <if test="returnData != null" >
        return_data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null" >
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="borrowDate != null" >
        #{borrowDate,jdbcType=DATE},
      </if>
      <if test="returnData != null" >
        #{returnData,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bin.demo.model.BorrowingBooks" >
    update borrowingbooks
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null" >
        book_id = #{bookId,jdbcType=INTEGER},
      </if>
      <if test="borrowDate != null" >
        borrow_date = #{borrowDate,jdbcType=DATE},
      </if>
      <if test="returnData != null" >
        return_data = #{returnData,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bin.demo.model.BorrowingBooks" >
    update borrowingbooks
    set user_id = #{userId,jdbcType=INTEGER},
      book_id = #{bookId,jdbcType=INTEGER},
      borrow_date = #{borrowDate,jdbcType=DATE},
      return_data = #{returnData,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="selectBorrowingList" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from borrowingbooks
  </select>

  <select id="selectBorrowingListByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from borrowingbooks
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
</mapper>